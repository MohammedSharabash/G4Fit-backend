@using Cocoon.Resources
@model G4Fit.Models.ViewModels.LoginVM
@{
    string FacebookAppId = System.Configuration.ConfigurationManager.AppSettings["Facebook_App_ID"];
    var culture = System.Globalization.CultureInfo.CurrentUICulture.TwoLetterISOLanguageName.ToLowerInvariant();
}
@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            Swal.fire({
                title: 'تم بنجاح',
                text: '@ViewBag.Message',
                icon: 'success',
                timer: 2000, // 2 seconds
                showConfirmButton: false
            });
        });
    </script>
}
<section class="m-5 pt-3">
    <div class="card text-center d-block">
        <div class="card-header font-weight-bold text-white" style="background:black;">
            @(culture == "ar" ? "تسجيل الدخول" : "Login")
        </div>
        <div class="card-body m-auto">
            <section class="Connect" id="Login">
                <div class="container">
                    <div class="tab-content" id="nav-tabContent">
                        <div class="tab-pane fade show active" id="nav-profile" role="tabpanel" aria-labelledby="nav-home-tab">
                            @if (TempData["ForgotPasswordSuccess"] != null)
                            {
                                <p class="text-success"><strong>@(culture == "ar" ? "تم ارسال رساله استعاده كلمه السر الى رقم هاتفك" : "Password recovery code has been sent to your mobile")</strong></p>
                            }
                            <div class="Login">
                                @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { @class = "text-center m-auto" }))
                                {
                                    <div class="form-group">
                                        @Html.TextBoxFor(s => s.Provider, new { @class = "form-control text-center", type = "number", placeholder = Website.PhoneNumberPlaceholder })<i class="fa fa-user-circle fa-fw"></i>
                                        @Html.ValidationMessageFor(s => s.Provider, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.TextBoxFor(s => s.Password, new { @class = "form-control text-center", placeholder = Website.PasswordPlaceholder, type = "password" })<i class="fa fa-user-lock fa-fw"></i>
                                        @Html.ValidationMessageFor(s => s.Password, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <button class="btn text-white" style="background-color:black;" type="submit">@Website.Login</button>
                                    </div>
                                }
                            </div>
                            <a href="@Url.Action("ForgotPassword", "Account")" class="text-black"><strong>@(culture == "ar" ? "نسيت كلمه المرور؟" : "Forgot your password?")</strong></a><br />
                            <a href="@Url.Action("Register", "Account")" class="text-black"><strong>@(culture == "ar" ? "ليس لديك حساب؟ التسجيل الان" : "Don't have account? register now")</strong></a>
                            @*<div class="separator my-3">@Website.Or</div>
                                <div class="row m-auto text-center">
                                    <div class="col-lg-12 my-2">
                                        <div class="fb-login-button" data-scope="public_profile,email" data-size="large" data-button-type="continue_with" data-layout="default" data-auto-logout-link="false" data-use-continue-as="true" data-onlogin="checkLoginState()" data-width=""></div>
                                        @using (Html.BeginForm("FBLogin", "Account", FormMethod.Post, new { @id = "FB-Form" }))
                                        {
                                            <input hidden name="accessToken" id="accessToken" />
                                        }
                                    </div>
                                </div>*@
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
</section>


@section Scripts {
    <script>
        function statusChangeCallback(response) {  // Called with the results from FB.getLoginStatus().
            if (response.status === 'connected') {   // Logged into your webpage and Facebook.
                Login(response);
            }
        }

        function checkLoginState() {               // Called when a person is finished with the Login Button.
            FB.getLoginStatus(function (response) {   // See the onlogin handler
                statusChangeCallback(response);
            });
        }

        window.fbAsyncInit = function () {
            FB.init({
                appId: '@FacebookAppId',
                cookie: true,
                xfbml: true,
                version: 'v8.0'
            });
        };

        function Login(response) {
            $("#accessToken").val(response.authResponse.accessToken);
        $("#FB-Form").submit();
        }
    </script>
}