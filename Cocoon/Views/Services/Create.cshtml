@model G4Fit.Models.ViewModels.CreateServiceVM
@{
    Layout = "~/Views/Dashboard/Layout.cshtml";
    ViewBag.Title = "اضافه خدمه جديد";
    var Categories = ViewBag.Categories as List<G4Fit.Models.Domains.SubCategory>;
}
<style>
    .status-label {
        padding: 5px 10px; /* padding لإنشاء مساحة داخلية */
        font-size: 1.2rem; /* حجم الخط */
        font-weight: bold; /* جعل النص غامق */
        color: #ffffff; /* لون النص - يمكنك تغييره */
        background-color: #007bff; /* لون الخلفية */
        border: 2px solid #007bff; /* لون الإطار */
        border-radius: 5px; /* جعل الحواف مدورة قليلاً */
        transition: background-color 0.3s, border-color 0.3s; /* تأثير انتقال عند تغيير الخلفية */
    }

        /* تأثيرات عند التمرير */
        .status-label:hover {
            background-color: #0056b3; /* لون الخلفية عند التمرير */
            border-color: #0056b3; /* لون الإطار عند التمرير */
            cursor: pointer; /* تغيير شكل المؤشر عند التمرير */
        }
</style>
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title"><i class="fa fa-fw fa-plus"></i> @ViewBag.Title</h3>
    </div>
    <div class="panel-body">
        <div id="accordion" class="panel-group" aria-multiselectable="true" role="tablist">
            <div class="panel panel-success">
                <div id="collapseOne" class="panel-collapse" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body">
                        <div id="model-errors" style="display:none;">
                            <ul class="text-danger" id="ul-errors"></ul>
                            <hr />
                        </div>
                        @using (Ajax.BeginForm("Create", "Services", new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnFailure = "OnFailure", LoadingElementId = "loader" }, new { enctype = "multipart/form-data" }))
                        {
                            <div class="row" style="margin:10px;">
                                <div class="col-lg-12 text-danger mb-15">
                                    <h4>&bull; بيانات الخدمه</h4>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="CategoryId" class="col-sm-5 control-label required">القسم: </label>
                                        <div class="col-sm-7">
                                            <select name="CategoryId" id="CategoryId" class="select2 form-control" required>
                                                @foreach (var category in Categories.OrderBy(w => w.NameAr))
                                                {
                                                    <option value="@category.Id">@category.NameAr</option>
                                                }
                                            </select>
                                            @Html.ValidationMessageFor(d => d.CategoryId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row" style="margin:10px;">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="NameAr" class="col-sm-5 control-label required">اسم الخدمه بالعربى: </label>
                                        <div class="col-sm-7">
                                            @Html.EditorFor(model => model.NameAr, new { htmlAttributes = new { @class = "form-control valid", required = true } })
                                            @Html.ValidationMessageFor(d => d.NameAr, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="NameEn" class="col-sm-5 control-label required">اسم الخدمه بالانجليزى:</label>
                                        <div class="col-sm-7">
                                            @Html.EditorFor(model => model.NameEn, new { htmlAttributes = new { @class = "form-control valid", required = true } })
                                            @Html.ValidationMessageFor(d => d.NameEn, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row" style="margin:10px">
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <label for="DescriptionAr" class="col-sm-2 control-label">وصف الخدمه بالعربى:</label>
                                        <div class="col-sm-10">
                                            @*@Html.TextAreaFor(model => model.DescriptionAr, htmlAttributes: new { @class = "form-control", rows = 4 })*@
                                            @Html.TextAreaFor(w => w.DescriptionAr, new { @class = "", id = "tiny" })
                                            @Html.ValidationMessageFor(d => d.DescriptionAr, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <label for="DescriptionEn" class="col-sm-2 control-label">وصف الخدمه بالانجليزى:</label>
                                        <div class="col-sm-10">
                                            @*@Html.TextAreaFor(model => model.DescriptionEn, htmlAttributes: new { @class = "form-control", rows = 4 })*@
                                            @Html.TextAreaFor(w => w.DescriptionEn, new { id = "tiny" })
                                            @Html.ValidationMessageFor(d => d.DescriptionEn, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin:10px;">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="Price" class="col-sm-5 control-label required">سعر الخدمه:</label>
                                        <div class="col-sm-7">
                                            <div class="input-group">
                                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control valid", required = true } })
                                                <span class="input-group-addon">ريال سعودي</span>
                                            </div>
                                            @Html.ValidationMessageFor(d => d.Price, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="SpecialPrice" class="col-sm-5 control-label required">سعر الخدمه الخاص بعروض [حماة وطن - طالبات - جامعة الملك خالد ]:</label>
                                        <div class="col-sm-7">
                                            <div class="input-group">
                                                @Html.EditorFor(model => model.SpecialPrice, new { htmlAttributes = new { @class = "form-control valid", required = true } })
                                                <span class="input-group-addon">ريال سعودي</span>
                                            </div>
                                            @Html.ValidationMessageFor(d => d.SpecialPrice, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="Images" class="col-sm-5 control-label">صور الخدمه:</label>
                                        <div class="col-sm-7">
                                            <input class="form-control" type="file" multiple name="Images" id="Images" accept="image/*" />
                                            @Html.ValidationMessageFor(d => d.Images, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row" style="margin:10px;">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="IsTimeBoundService" class="col-sm-5 control-label ">هل الخدمة محددة بوقت؟  <span title="تغيير القيمه" id="timeBoundLabel" class="status-label">لا</span></label>

                                        <div class="col-sm-7">
                                            <div class="input-group">
                                                @Html.CheckBoxFor(model => model.IsTimeBoundService, new { @class = "", @id = "IsTimeBoundService", onchange = "updateLabel()" })
                                            </div>
                                            @Html.ValidationMessageFor(d => d.IsTimeBoundService, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6" id="inventory-container">
                                    <div class="form-group">
                                        <label for="Inventory" class="col-sm-5 control-label required">كمية الخدمة:</label>
                                        <div class="col-sm-7">
                                            <div class="input-group">
                                                @Html.TextBoxFor(model => model.Inventory, new { @class = "form-control valid", type = "number", required = true, @id = "Inventory" })
                                            </div>
                                            @Html.ValidationMessageFor(d => d.Inventory, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6" id="service-days-container" style="display:none;">
                                    <div class="form-group">
                                        <label for="ServiceDays" class="col-sm-5 control-label required">عدد أيام الاشتراك بالخدمة:</label>
                                        <div class="col-sm-7">
                                            <div class="input-group">
                                                @Html.TextBoxFor(model => model.ServiceDays, new { @class = "form-control valid", type = "number", required = true, @id = "ServiceDays" })
                                            </div>
                                            @Html.ValidationMessageFor(d => d.ServiceDays, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6" id="Freezing-days-container" style="display:none;">
                                    <div class="form-group">
                                        <label for="ServiceFreezingDays" class="col-sm-5 control-label required">عدد أيام التجميد بالخدمة:</label>
                                        <div class="col-sm-7">
                                            <div class="input-group">
                                                @Html.TextBoxFor(model => model.ServiceFreezingDays, new { @class = "form-control valid", type = "number", required = true, @id = "ServiceFreezingDays" })
                                            </div>
                                            @Html.ValidationMessageFor(d => d.ServiceFreezingDays, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6" id="Freezing-Times-container" style="display:none;">
                                    <div class="form-group">
                                        <label for="ServiceFreezingTimes" class="col-sm-5 control-label required">عدد مرات التجميد بالخدمة:</label>
                                        <div class="col-sm-7">
                                            <div class="input-group">
                                                @Html.TextBoxFor(model => model.ServiceFreezingTimes, new { @class = "form-control valid", type = "number", required = true, @id = "ServiceFreezingTimes" })
                                            </div>
                                            @Html.ValidationMessageFor(d => d.ServiceFreezingTimes, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6" id="InBodyCount-container" @*style="display:none;"*@>
                                    <div class="form-group">
                                        <label for="InBodyCount" class="col-sm-5 control-label required">عدد InBodyCount بالخدمة:</label>
                                        <div class="col-sm-7">
                                            <div class="input-group">
                                                @Html.TextBoxFor(model => model.InBodyCount, new { @class = "form-control valid", type = "number", required = true, @id = "InBodyCount" })
                                            </div>
                                            @Html.ValidationMessageFor(d => d.InBodyCount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row" id="Features-container" style="display:none;margin:10px;">
                                <hr />
                                <div class="col-lg-12 text-danger mb-15">
                                    <h4>&bull; مدربات الخدمه</h4>
                                </div>

                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <label for="Features_0__FeatureAr" class="col-sm-2 control-label"> المدربات: </label>
                                        <div class="col-sm-10">
                                            <div class="field_wrapper_color">
                                                <div>
                                                    <a href="javascript:void(0);" class="add_button_color btn btn-outline-primary my-3" title="Add field"><i class="fa fa-plus"></i> اضافه مدرب</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @*
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            <label for="Features_0__FeatureAr" class="col-sm-2 control-label">احجام الخدمه: </label>
                                            <div class="col-sm-10">
                                                <div class="field_wrapper_size">
                                                    <div>
                                                        <a href="javascript:void(0);" class="add_button_size btn btn-outline-primary my-3" title="Add field"><i class="fa fa-plus"></i> اضافه حجم</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>*@

                            <button type="submit" class="btn btn-success" id="add-Service-btn">اضافه الخدمه <i class="fa fa-spinner fa-spin" id="loader" style="display:none;"></i></button>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div>
            @Html.ActionLink("العودة", "Dashboard", null, new { @class = "btn btn-default" })
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            var maxField = 15; //Input fields increment limitation
            var addButtonColor = $('.add_button_color'); //Add button selector
            var addButtonSize = $('.add_button_size'); //Add button selector
            var wrapperColor = $('.field_wrapper_color'); //Input field wrapper
            var wrapperSize = $('.field_wrapper_size'); //Input field wrapper
            var fieldHTMLColor = '<div class=" my-3 row mb-10 mr-5"><div class="col-sm-6"><input type="text" placeholder="الاسم" required name="Trainers[]" value="" class="form-control d-inline"/></div><div class="col-sm-2"><a href="javascript:void(0);" class="remove_button_color btn btn-outline-primary d-inline mx-3" title="Remove field"><a href="javascript:void(0);" class="remove_button_color btn btn-danger d-inline mx-3" title="Remove field" style="border-radius: 25px;" > حذف المدرب</a></div></div>'; //New input field html
            var fieldHTMLSize = '<div class="my-3 row"><div class="col-sm-6"><input type="text" placeholder="الحجم" required name="Sizes[]" value="" class="form-control d-inline"/></div><a href="javascript:void(0);" class="remove_button_size btn btn-outline-primary d-inline mx-3" title="Remove field"><a href="javascript:void(0);" class="remove_button_size btn btn-outline-primary d-inline mx-3" title="Remove field"><i class="fa fa-minus"></i> حذف الحجم</a></div>'; //New input field html
            var ColorCounter = 1; //Initial field counter is 1
            var SizeCounter = 1; //Initial field counter is 1

            //Once add button is clicked
            $(addButtonColor).click(function () {
                //Check maximum number of input fields
                if (ColorCounter < maxField) {
                    ColorCounter++; //Increment field counter
                    $(wrapperColor).append(fieldHTMLColor); //Add field html
                }
            });

            $(addButtonSize).click(function () {
                //Check maximum number of input fields
                if (SizeCounter < maxField) {
                    SizeCounter++; //Increment field counter
                    $(wrapperSize).append(fieldHTMLSize); //Add field html
                }
            });

            //Once remove button is clicked
            $(wrapperColor).on('click', '.remove_button_color', function (e) {
                e.preventDefault();
                $(this).parent('div').parent('div').remove(); //Remove field html
                ColorCounter--; //Decrement field counter
            });

            $(wrapperSize).on('click', '.remove_button_size', function (e) {
                e.preventDefault();
                $(this).parent('div').remove(); //Remove field html
                SizeCounter--; //Decrement field counter
            });
        });
    </script>

    <script type="text/javascript">
        function OnBegin() {
            $("#model-errors").hide();
            $("#ul-errors").empty();
            $("#add-Service-btn").attr("disabled", true);
        }
        function OnSuccess(results) {
            if (results.Success == true) {
                window.location.href = "/Services/Dashboard";
            }
            else {
                for (var i = 0; i < results.Errors.length; i++) {
                    $("#ul-errors").append("<li>" + results.Errors[i] + "</li>");
                }
                toastr.error("يوجد أخطاء ، برجاء المراجعه فى اعلى الصفحه");
                $("#model-errors").show();
                $("#add-Service-btn").attr("disabled", false);
                $("#cover-spin").hide();
            }

        }
        function OnFailure(data) {
            alert("حدث خطأ ما، برجاء المحاوله لاحقاً");
        }
    </script>
}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var isTimeBoundServiceCheckbox = document.getElementById("IsTimeBoundService");
        var inventoryContainer = document.getElementById("inventory-container");
        var FeaturesContainer = document.getElementById("Features-container");
        var inventoryInput = document.getElementById("Inventory");
        var ServiceDaysInput = document.getElementById("ServiceDays");
        var ServiceFreezingTimesInput = document.getElementById("ServiceFreezingTimes");
        var ServiceFreezingDaysInput = document.getElementById("ServiceFreezingDays");
        //var InBodyCountInput = document.getElementById("InBodyCount");
        var serviceDaysContainer = document.getElementById("service-days-container");
        var FreezingDaysContainer = document.getElementById("Freezing-days-container");
        var FreezingTimesContainer = document.getElementById("Freezing-Times-container");
        var InBodyCountContainer = document.getElementById("InBodyCount-container");

        // Function to toggle fields based on checkbox status
        function toggleFields() {
            if (isTimeBoundServiceCheckbox.checked) {
                // Show ServiceDays, hide Inventory and set its value to 1
                serviceDaysContainer.style.display = "block";
                FreezingDaysContainer.style.display = "block";
                FreezingTimesContainer.style.display = "block";
                //InBodyCountContainer.style.display = "block";
                inventoryContainer.style.display = "none";
                FeaturesContainer.style.display = "block";
                inventoryInput.value = 1;
                ServiceDaysInput.value = 1;
                ServiceFreezingTimesInput.value = 1;
                ServiceFreezingDaysInput.value = 1;
                InBodyCountInput.value = 1;
            } else {
                // Hide ServiceDays, show Inventory and clear value
                serviceDaysContainer.style.display = "none";
                FreezingDaysContainer.style.display = "none";
                FreezingTimesContainer.style.display = "none";
                //InBodyCountContainer.style.display = "none";
                inventoryContainer.style.display = "block";
                FeaturesContainer.style.display = "none";
                inventoryInput.value = '1'; // Clear the value of Inventory
                ServiceDaysInput.value = '1'; // Clear the value of ServiceDays
                ServiceFreezingTimesInput.value = '1'; // Clear the value of ServiceFreezingTimes
                ServiceFreezingDaysInput.value = '1'; // Clear the value of ServiceFreezingDays
                InBodyCountInput.value = '1'; // Clear the value of InBodyCount
            }
        }

        // Add event listener to checkbox
        isTimeBoundServiceCheckbox.addEventListener("change", toggleFields);

        // Initialize the form fields based on the initial checkbox state
        toggleFields();


    });

    function updateLabel() {
        var checkbox = document.getElementById('IsTimeBoundService');
        var label = document.getElementById('timeBoundLabel');

        if (checkbox.checked) {
            label.textContent = "نعم"; // إذا كانت القيمة true، اجعل النص "نعم"
        } else {
            label.textContent = "لا"; // إذا كانت القيمة false، اجعل النص "لا"
        }
    }

    // استدعاء الدالة عند تحميل الصفحة للتأكد من أن النص صحيح
    document.addEventListener('DOMContentLoaded', function () {
        updateLabel();
    });

</script>
