@model G4Fit.Models.ViewModels.ServiceOfferVM
@{
    Layout = "~/Views/Dashboard/Layout.cshtml";
    var Service = ViewBag.Service as G4Fit.Models.Domains.Service;
    ViewBag.Title = "اضافه عرض جديد للخدمه " + Service.NameAr;
}

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title"><i class="fa fa-fw fa-plus"></i> @ViewBag.Title</h3>
    </div>
    <div class="panel-body">
        <div id="accordion" class="panel-group" aria-multiselectable="true" role="tablist">
            <div class="panel panel-success">
                <div id="collapseOne" class="panel-collapse" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body">
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        <hr />
                        @using (Html.BeginForm("CreateOffer", "Services", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <input name="ServiceId" value="@Service.Id" hidden />
                            <div class="row" style="margin:10px;">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="OfferPrice" class="col-sm-5 control-label required">سعر العرض: </label>
                                        <div class="col-sm-7">
                                            <div class="input-group">
                                                @Html.TextBoxFor(s => s.OfferPrice, new { @class = "form-control", type = "number", step = "0.01" })
                                                <span class="input-group-addon">ر.س</span>
                                            </div>
                                            @Html.ValidationMessageFor(d => d.OfferPrice, "", new { @class = "text-danger" })
                                            <small class="text-muted">السعر الأصلي: @Service.OriginalPrice ر.س</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="FinishOn" class="col-sm-5 control-label">تاريخ نهايه العرض (اختيارى): </label>
                                        <div class="col-sm-7">
                                            @Html.TextBoxFor(s => s.FinishOn, new { @class = "form-control", type = "date" })
                                            @Html.ValidationMessageFor(d => d.FinishOn, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <button type="submit" class="btn btn-success">اضافه العرض</button>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div>
            @Html.ActionLink("العودة", "Offers", new { ServiceId = Service.Id }, new { @class = "btn btn-default" })
            <button id="downloadFileBtn" class="btn btn-primary">تحميل ملف الخدمات</button>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('#downloadFileBtn').click(function (e) {
            e.preventDefault();

            // Show loading spinner or overlay if needed
            // Example: $('#loadingSpinner').show();

            $.ajax({
                url: '@Url.Action("DownloadFile", "Services")',
                method: 'GET',
                xhrFields: {
                    responseType: 'blob'
                },
                success: function (data, status, xhr) {
                    var filename = "";
                    var disposition = xhr.getResponseHeader('Content-Disposition');
                    if (disposition && disposition.indexOf('attachment') !== -1) {
                        var matches = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/.exec(disposition);
                        if (matches != null && matches[1]) filename = matches[1].replace(/['"]/g, '');
                    }

                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' }));
                    link.download = filename || 'ServicesDetails.xlsx';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);

                    // Hide loading spinner or overlay if needed
                    // Example: $('#loadingSpinner').hide();
                },
                error: function () {
                    // Handle error
                    alert('حدث خطأ أثناء تحميل الملف.');

                    // Hide loading spinner or overlay if needed
                    // Example: $('#loadingSpinner').hide();
                }
            });
        });
    });
</script>
